package com.gawdscape.launcher;

import com.gawdscape.json.auth.RefreshRequest;
import com.gawdscape.json.auth.SessionResponse;
import com.gawdscape.launcher.auth.AuthManager;
import com.gawdscape.launcher.auth.SessionManager;
import com.gawdscape.launcher.util.Constants;
import com.gawdscape.launcher.util.ImageUtils;
import com.gawdscape.launcher.util.OperatingSystem;

import java.awt.*;
import java.util.logging.Level;

/**
 *
 * @author Vinnie
 */
public final class LoginDialog extends javax.swing.JDialog {

    private final SessionManager sessionManager;

    /**
     * Creates new form LoginDialog
     *
     * @param parent
     * @param manager
     */
    public LoginDialog(Frame parent, SessionManager manager) {
	super(parent, true);
	sessionManager = manager;
	GawdScapeLauncher.logger.log(Level.FINER, "Initializing login dialog.");
	initComponents();
	setLocationRelativeTo(parent);
	loadUsers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        infoLabel = new javax.swing.JLabel();
        javax.swing.JLabel usernameLabel = new javax.swing.JLabel();
        javax.swing.JLabel passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        rememberCheckBox = new javax.swing.JCheckBox();
        javax.swing.JButton loginButton = new javax.swing.JButton();
        javax.swing.JLabel helpLabel = new javax.swing.JLabel();
        javax.swing.JLabel buyLabel = new javax.swing.JLabel();
        usernameComboBox = new javax.swing.JComboBox();
        autoLoginCheckBox = new javax.swing.JCheckBox();
        offlineButton = new javax.swing.JButton();

        setTitle("GawdScape Launcher");
        setIconImage(ImageUtils.getFavIcon());
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        infoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infoLabel.setText("<html>Please login using your Minecraft acccount.");

        usernameLabel.setText("Username or Email:");

        passwordLabel.setText("Password:");

        rememberCheckBox.setText("Remember account?");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        helpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        helpLabel.setText("Launcher Help");
        helpLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        helpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpLabelMouseClicked(evt);
            }
        });

        buyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        buyLabel.setText("Buy Minecraft");
        buyLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buyLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buyLabelMouseClicked(evt);
            }
        });

        usernameComboBox.setEditable(true);
        usernameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameComboBoxActionPerformed(evt);
            }
        });

        autoLoginCheckBox.setText("Auto login?");
        autoLoginCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoLoginCheckBoxActionPerformed(evt);
            }
        });

        offlineButton.setText("Play Offline");
        offlineButton.setEnabled(false);
        offlineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offlineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(autoLoginCheckBox)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordField)
                            .addComponent(rememberCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(helpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usernameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(offlineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 30, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rememberCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(autoLoginCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offlineButton)
                .addGap(18, 18, 18)
                .addComponent(helpLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buyLabel)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
	String username = usernameComboBox.getSelectedItem().toString();
	String password = new String(passwordField.getPassword());

	if (sessionManager.isUserSaved(username)) {
	    doLogin(null, null, sessionManager.getToken(username));
	    return;
	}

	if ((username.isEmpty()) && (password.isEmpty())) {
	    setError("Please enter a username and password.");
	} else if (username.isEmpty()) {
	    setError("Please enter a username.");
	} else if (password.isEmpty()) {
	    setError("Please enter a password.");
	} else {
	    doLogin(username, password, null);
	}
    }//GEN-LAST:event_loginButtonActionPerformed

    private void helpLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpLabelMouseClicked
	OperatingSystem.openLink(Constants.LAUNCHER_WIKI_LINK);
    }//GEN-LAST:event_helpLabelMouseClicked

    private void buyLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buyLabelMouseClicked
	OperatingSystem.openLink(Constants.MC_BUY_LINK);
    }//GEN-LAST:event_buyLabelMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
	System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void autoLoginCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoLoginCheckBoxActionPerformed
	if (autoLoginCheckBox.isSelected()) {
	    rememberCheckBox.setSelected(true);
	}
    }//GEN-LAST:event_autoLoginCheckBoxActionPerformed

    private void usernameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameComboBoxActionPerformed
	String username = usernameComboBox.getSelectedItem().toString();
	boolean saved = sessionManager.isUserSaved(username);
	boolean autoLogin = sessionManager.isAutoLoginUser(username);
	usernameComboBox.setEditable(!saved);
	passwordField.setEditable(!saved);
	rememberCheckBox.setSelected(saved);
	autoLoginCheckBox.setSelected(autoLogin);
        offlineButton.setEnabled(saved);
    }//GEN-LAST:event_usernameComboBoxActionPerformed

    private void offlineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offlineButtonActionPerformed
        String username = usernameComboBox.getSelectedItem().toString();
        dispose();
        GawdScapeLauncher.launcherFrame.setOffline(username);
        GawdScapeLauncher.launcherFrame.setVisible(true);
        GawdScapeLauncher.loginDialog = null;
    }//GEN-LAST:event_offlineButtonActionPerformed

    private void loadUsers() {
	sessionManager.getSavedUsernames().forEach(usernameComboBox::addItem);
	if (sessionManager.getLastUser() != null) {
	    usernameComboBox.setSelectedItem(sessionManager.getLastUser());
	}
	usernameComboBox.addItem("");
    }

    public void setError(String text) {
	infoLabel.setForeground(Color.red);
	infoLabel.setText("<html>" + text);
	GawdScapeLauncher.logger.log(Level.SEVERE, "Error logging in: {0}", text);
    }

    private void doLogin(String username, String password, RefreshRequest token) {
	SessionResponse response;
	if (token != null) {
	    response = AuthManager.refresh(token);
	} else {
	    response = AuthManager.authenticate(username, password, null);
	}
	if (response == null) {
	    setError("No response.");
	    return;
	}

	GawdScapeLauncher.session = response;

	if (response.getAccessToken() != null) {
	    String playerName = response.getSelectedProfile().getName();
	    if (rememberCheckBox.isSelected()) {
		sessionManager.addSession(response);
		sessionManager.setLastUser(playerName);
		if (autoLoginCheckBox.isSelected()) {
		    sessionManager.setAutoLoginUser(playerName);
		}
	    } else {
		sessionManager.removeSession(playerName);
		sessionManager.setLastUser(null);
	    }
	    if (!autoLoginCheckBox.isSelected() && sessionManager.isAutoLoginUser(playerName)) {
		sessionManager.setAutoLoginUser(null);
	    }
	    SessionManager.saveSessions(sessionManager);
	    dispose();
	    GawdScapeLauncher.launcherFrame.setUsername(playerName);
	    GawdScapeLauncher.launcherFrame.setVisible(true);
	    GawdScapeLauncher.loginDialog = null;
	} else {
	    setError(response.getErrorMessage());
	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoLoginCheckBox;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton offlineButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JCheckBox rememberCheckBox;
    private javax.swing.JComboBox usernameComboBox;
    // End of variables declaration//GEN-END:variables
}
