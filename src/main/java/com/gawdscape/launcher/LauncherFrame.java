package com.gawdscape.launcher;

import com.gawdscape.launcher.auth.SessionManager;
import com.gawdscape.launcher.updater.Updater;
import com.gawdscape.launcher.util.*;

import javax.swing.*;
import javax.swing.event.HyperlinkEvent;
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;

/**
 *
 * @author Vinnie
 */
public final class LauncherFrame extends javax.swing.JFrame {

    private static String[] packs = new String[0];
    private static ImageIcon[] packLogos = new ImageIcon[0];
    private static String username = "Guest";
    private final boolean news;
    private final ModPackComboRenderer modComboRenderer;

    /**
     * Creates new form LauncherFrame
     *
     * @param news
     */
    public LauncherFrame(boolean news) {
	GawdScapeLauncher.logger.finer("Initializing launcher frame.");
	this.news = news;
	modComboRenderer = new ModPackComboRenderer();
	modComboRenderer.setPreferredSize(new Dimension(256, 64));
	initComponents();
	setLocationRelativeTo(null);
	loadPacks();
	loadNews();
    }

    public void loadPacks() {
	packCombo.removeAllItems();

	int id = 0;
	int total = GawdScapeLauncher.modpacks.getPackCount();
	packs = new String[total];
	packLogos = new ImageIcon[total];
	for (String pack : GawdScapeLauncher.modpacks.getPacks()) {
	    System.out.println("id: " + id + " pack: " + pack);
	    packCombo.addItem(id);
	    packs[id] = pack;
	    File packLogo = new File(Directories.getLogoPath(pack));
	    if (!packLogo.exists()) {
		packLogo.getParentFile().mkdirs();
		FileUtils.downloadFile(GawdScapeLauncher.modpacks.getPackUrl(pack) + "/logo.png", packLogo);
	    }
	    if (packLogo.exists()) {
		ImageIcon logo = new ImageIcon(packLogo.getPath());
		logo.setDescription(pack);
		packLogos[id] = logo;
	    }
	    id++;
	}

	int defaultPackID = GawdScapeLauncher.config.getDefaultPack();
	if (id >= defaultPackID) {
	    packCombo.setSelectedIndex(defaultPackID);
	}
    }

    private void loadNews() {
	if (news) {
	    try {
		newsPane.setPage(Constants.LAUNCHER_NEWS);
	    } catch (IOException ex) {
		GawdScapeLauncher.logger.log(Level.SEVERE, "Error loading news", ex);
	    }
	} else {
	    remove(scrollPane);
	    setSize(554, 134);
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        newsPane = new javax.swing.JEditorPane();
        com.gawdscape.launcher.ui.CobblestonePanel bottomPanel = new com.gawdscape.launcher.ui.CobblestonePanel();
        com.gawdscape.launcher.ui.TransparentPanel profilePanel = new com.gawdscape.launcher.ui.TransparentPanel();
        playButton = new com.gawdscape.launcher.ui.TransparentButton();
        com.gawdscape.launcher.ui.TransparentButton optionsButton = new com.gawdscape.launcher.ui.TransparentButton();
        greetingLabel = new com.gawdscape.launcher.ui.TransparentLabel();
        usernameLabel = new com.gawdscape.launcher.ui.WhiteLinkLabel();
        com.gawdscape.launcher.ui.WhiteLinkLabel switchUsersLabel = new com.gawdscape.launcher.ui.WhiteLinkLabel();
        com.gawdscape.launcher.ui.WhiteLinkLabel logoutLabel = new com.gawdscape.launcher.ui.WhiteLinkLabel();
        com.gawdscape.launcher.ui.WhiteLinkLabel aboutLabel = new com.gawdscape.launcher.ui.WhiteLinkLabel();
        packCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GawdScape Launcher");
        setIconImage(ImageUtils.getFavIcon());
        setName("frame"); // NOI18N

        scrollPane.setBorder(null);

        newsPane.setEditable(false);
        newsPane.setBorder(null);
        newsPane.setContentType("text/html"); // NOI18N
        newsPane.setText("Loading news...");
        newsPane.setMargin(new java.awt.Insets(0, 0, 0, 0));
        newsPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {
            public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {
                newsPaneHyperlinkUpdate(evt);
            }
        });
        scrollPane.setViewportView(newsPane);

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        optionsButton.setText("Options");
        optionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsButtonActionPerformed(evt);
            }
        });

        greetingLabel.setText("Welcome back");
        greetingLabel.setFont(greetingLabel.getFont().deriveFont(greetingLabel.getFont().getStyle() | java.awt.Font.BOLD));

        usernameLabel.setText("Guest");
        usernameLabel.setFont(usernameLabel.getFont().deriveFont(usernameLabel.getFont().getStyle() | java.awt.Font.BOLD));
        usernameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameLabelMouseClicked(evt);
            }
        });

        switchUsersLabel.setText("Switch Users");
        switchUsersLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchUsersLabelMouseClicked(evt);
            }
        });

        logoutLabel.setText("Logout");
        logoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLabelMouseClicked(evt);
            }
        });

        aboutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        aboutLabel.setText("About");
        aboutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout profilePanelLayout = new javax.swing.GroupLayout(profilePanel);
        profilePanel.setLayout(profilePanelLayout);
        profilePanelLayout.setHorizontalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addComponent(switchUsersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, profilePanelLayout.createSequentialGroup()
                        .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(greetingLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(6, 6, 6)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(optionsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(profilePanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(aboutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        profilePanelLayout.setVerticalGroup(
            profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greetingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optionsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(profilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aboutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(switchUsersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        packCombo.setPreferredSize(new java.awt.Dimension(281, 71));
        packCombo.setRenderer(modComboRenderer);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(packCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addComponent(profilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(profilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(packCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
            .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newsPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_newsPaneHyperlinkUpdate
	if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
	    try {
		OperatingSystem.openLink(evt.getURL().toURI());
	    } catch (URISyntaxException ex) {
		GawdScapeLauncher.logger.log(Level.SEVERE, "Invalid URI", ex);
	    }
	}
    }//GEN-LAST:event_newsPaneHyperlinkUpdate

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
	playButton.setEnabled(false);
	int packID = packCombo.getSelectedIndex();
	GawdScapeLauncher.config.setDefaultPack(packID);
	Config.saveConfig(GawdScapeLauncher.config);
	GawdScapeLauncher.updater = new Updater(packs[packID]);
	GawdScapeLauncher.updater.start();
    }//GEN-LAST:event_playButtonActionPerformed

    private void optionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsButtonActionPerformed
	new OptionsDialog(this).setVisible(true);
    }//GEN-LAST:event_optionsButtonActionPerformed

    private void logoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLabelMouseClicked
	GawdScapeLauncher.session = null;
	SessionManager manager = SessionManager.loadSessions();
	manager.removeSession(username);
	SessionManager.saveSessions(manager);
	dispose();
	GawdScapeLauncher.loginDialog = new LoginDialog(null, manager);
	GawdScapeLauncher.loginDialog.setVisible(true);
    }//GEN-LAST:event_logoutLabelMouseClicked

    private void aboutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutLabelMouseClicked
	AboutDialog about = new AboutDialog(this);
	about.setVisible(true);
    }//GEN-LAST:event_aboutLabelMouseClicked

    private void usernameLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLabelMouseClicked
	try {
	    URI uri = new URI("http://www.gawdscape.com/player/" + username);
	    OperatingSystem.openLink(uri);
	} catch (URISyntaxException ex) {
	    GawdScapeLauncher.logger.log(Level.SEVERE, "Invalid URI", ex);
	}
    }//GEN-LAST:event_usernameLabelMouseClicked

    private void switchUsersLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchUsersLabelMouseClicked
	GawdScapeLauncher.session = null;
	dispose();
	GawdScapeLauncher.loginDialog = new LoginDialog(null, SessionManager.loadSessions());
	GawdScapeLauncher.loginDialog.setVisible(true);
    }//GEN-LAST:event_switchUsersLabelMouseClicked

    public void setPlayEnabled(boolean on) {
	playButton.setEnabled(on);
    }

    public void setUsername(String name) {
	username = name;
	greetingLabel.setText("Welcome back");
	usernameLabel.setText(username);
    }

    public void setOffline(String name) {
        username = name;
	greetingLabel.setText("Offline Mode");
        usernameLabel.setText(username);
    }

    public String getSelectedPack() {
	return packs[packCombo.getSelectedIndex()];
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.gawdscape.launcher.ui.TransparentLabel greetingLabel;
    private static javax.swing.JEditorPane newsPane;
    private javax.swing.JComboBox packCombo;
    public static com.gawdscape.launcher.ui.TransparentButton playButton;
    private javax.swing.JScrollPane scrollPane;
    private com.gawdscape.launcher.ui.WhiteLinkLabel usernameLabel;
    // End of variables declaration//GEN-END:variables

    class ModPackComboRenderer extends JLabel implements ListCellRenderer {

	public ModPackComboRenderer() {
	    setOpaque(true);
	    setHorizontalAlignment(CENTER);
	    setVerticalAlignment(CENTER);
	}

	@Override
	public Component getListCellRendererComponent(
		JList list,
		Object value,
		int index,
		boolean isSelected,
		boolean cellHasFocus) {
	    int selectedIndex = ((Integer) value);

	    if (isSelected) {
		setBackground(list.getSelectionBackground());
		setForeground(list.getSelectionForeground());
	    } else {
		setBackground(list.getBackground());
		setForeground(list.getForeground());
	    }

	    ImageIcon icon = packLogos[selectedIndex];
	    String name = packs[selectedIndex];
	    //setFont(list.getFont());
	    if (icon != null) {
		setIcon(icon);
		setText("");
	    } else {
		setIcon(ImageUtils.getMissingPackLogo());
		setText(name);
	    }

	    return this;
	}
    }

}
